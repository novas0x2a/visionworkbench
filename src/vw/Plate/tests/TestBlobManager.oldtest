// __BEGIN_LICENSE__
// Copyright (C) 2006-2010 United States Government as represented by
// the Administrator of the National Aeronautics and Space Administration.
// All Rights Reserved.
// __END_LICENSE__


#include <cxxtest/TestSuite.h>

#include <vw/Plate/Exception.h>
#include <vw/Plate/BlobManager.h>

using namespace std;
using namespace vw;
using namespace vw::platefile;

class TestBlobManager : public CxxTest::TestSuite {

public:

  void test_blob_mgr() {

    // Initial blobs = 1, max_blobs = 4;
    BlobManager bm(1024, 1, 4);
    TS_ASSERT_EQUALS(bm.num_blobs(), 1u);
    
    // Test basic lock with one blob_id
    std::cout << "\nTesting blob manager.  If this hangs, then there is a problem!!\n";
    int blob_id = bm.request_lock(1024);
    TS_ASSERT_EQUALS(blob_id, 0);
    bm.release_lock(blob_id, 1024);

    // Test basic lock after release
    blob_id = bm.request_lock(1024);
    TS_ASSERT_EQUALS(blob_id, 0);
    bm.release_lock(blob_id, 2048);
    
    // Test basic lock with two outstanding requests
    int blob_id1 = bm.request_lock(1024);
    int blob_id2 = bm.request_lock(1024);
    TS_ASSERT_EQUALS(blob_id1, 0);
    TS_ASSERT_EQUALS(blob_id2, 1);
    bm.release_lock(blob_id1, 2048);
    bm.release_lock(blob_id2, 2048);

    // Max out the number of blobs.
    blob_id1 = bm.request_lock(1024);
    blob_id2 = bm.request_lock(1024);
    int blob_id3 = bm.request_lock(1024);
    int blob_id4 = bm.request_lock(1024);

    TS_ASSERT_THROWS(int blob_id5 = bm.request_lock(1024), BlobLimitErr);
  }

}; // class TestBlobManager
