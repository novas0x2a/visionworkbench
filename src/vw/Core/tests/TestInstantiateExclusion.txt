template ResultT vw::compound_select_channel < ResultT,PixelT > (PixelT&, boost::enable_if<boost::mpl::and_<boost::mpl::not_<vw::IsCompound<PixelT> >::type, boost::is_reference<T>::type, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, int>::type);
template ResultT vw::compound_select_channel < ResultT,PixelT > (PixelT&, boost::enable_if<boost::mpl::and_<vw::IsCompound<PixelT>, boost::is_reference<T>::type, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, int>::type);
template ResultT vw::compound_select_channel < ResultT,PixelT > (const PixelT&, boost::enable_if<boost::mpl::and_<boost::mpl::not_<vw::IsCompound<PixelT> >::type, boost::mpl::not_<boost::is_reference<T>::type>::type, mpl_::bool_<true>, mpl_::bool_<true>, mpl_::bool_<true> >, int>::type);
template struct vw::BinaryReturnTernaryTemplateBind1st<ResultT, ValT>;
template struct vw::TypeDeductionError<T>;
template struct vw::UnaryReturnBinaryTemplateBind1st<ResultT, ValT>;
template struct vw::UnaryReturnBinaryTemplateBind2nd<ResultT, ValT>;
template struct vw::UnaryReturnSameType::result<Args>;
template struct vw::UnaryReturnTernaryTemplateBind1st2nd<ResultT, Val1T, Val2T>;
template struct vw::UnaryReturnTernaryTemplateBind1st3rd<ResultT, Val1T, Val3T>;
